// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetApiSizesByIdData, GetApiSizesByIdResponse, PutApiSizesByIdData, PutApiSizesByIdResponse, DeleteApiSizesByIdData, DeleteApiSizesByIdResponse, GetApiSizesResponse, PostApiSizesData, PostApiSizesResponse, GetApiReviewsByIdData, GetApiReviewsByIdResponse, PutApiReviewsByIdData, PutApiReviewsByIdResponse, DeleteApiReviewsByIdData, DeleteApiReviewsByIdResponse, GetApiReviewsResponse, PostApiReviewsData, PostApiReviewsResponse, GetApiPromotionProductsByIdData, GetApiPromotionProductsByIdResponse, PutApiPromotionProductsByIdData, PutApiPromotionProductsByIdResponse, DeleteApiPromotionProductsByIdData, DeleteApiPromotionProductsByIdResponse, GetApiPromotionProductsResponse, PostApiPromotionProductsData, PostApiPromotionProductsResponse, PostApiPromotionProductsBatchData, PostApiPromotionProductsBatchResponse, GetApiProductsByIdData, GetApiProductsByIdResponse, PutApiProductsByIdData, PutApiProductsByIdResponse, DeleteApiProductsByIdData, DeleteApiProductsByIdResponse, GetApiProductsResponse, PostApiProductsData, PostApiProductsResponse, GetApiProductVariantsByIdData, GetApiProductVariantsByIdResponse, PutApiProductVariantsByIdData, PutApiProductVariantsByIdResponse, DeleteApiProductVariantsByIdData, DeleteApiProductVariantsByIdResponse, GetApiProductVariantsData, GetApiProductVariantsResponse, PostApiProductVariantsData, PostApiProductVariantsResponse, PostApiProductVariantsBulkData, PostApiProductVariantsBulkResponse, GetApiOrdersByIdData, GetApiOrdersByIdResponse, PutApiOrdersByIdData, PutApiOrdersByIdResponse, DeleteApiOrdersByIdData, DeleteApiOrdersByIdResponse, PutApiOrdersByIdConfirmData, PutApiOrdersByIdConfirmResponse, GetApiOrdersResponse, PostApiOrdersData, PostApiOrdersResponse, GetApiOrdersUserOrdersResponse, GetApiCategoriesByIdData, GetApiCategoriesByIdResponse, PutApiCategoriesByIdData, PutApiCategoriesByIdResponse, DeleteApiCategoriesByIdData, DeleteApiCategoriesByIdResponse, GetApiCategoriesResponse, PostApiCategoriesData, PostApiCategoriesResponse, GetApiHeadingsResponse, PostApiHeadingsData, PostApiHeadingsResponse, GetApiHeadingsByIdData, GetApiHeadingsByIdResponse, DeleteApiHeadingsByIdData, DeleteApiHeadingsByIdResponse } from './types.gen';

export class SizeControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns SizeDto OK
     * @throws ApiError
     */
    public static getApiSizesById(data: GetApiSizesByIdData): CancelablePromise<GetApiSizesByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/sizes/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns SizeDto OK
     * @throws ApiError
     */
    public static putApiSizesById(data: PutApiSizesByIdData): CancelablePromise<PutApiSizesByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/sizes/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiSizesById(data: DeleteApiSizesByIdData): CancelablePromise<DeleteApiSizesByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/sizes/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @returns SizeDto OK
     * @throws ApiError
     */
    public static getApiSizes(): CancelablePromise<GetApiSizesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/sizes'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns SizeDto Created
     * @throws ApiError
     */
    public static postApiSizes(data: PostApiSizesData): CancelablePromise<PostApiSizesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/sizes',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

}

export class ReviewControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns ReviewDto OK
     * @throws ApiError
     */
    public static getApiReviewsById(data: GetApiReviewsByIdData): CancelablePromise<GetApiReviewsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/reviews/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns ReviewDto OK
     * @throws ApiError
     */
    public static putApiReviewsById(data: PutApiReviewsByIdData): CancelablePromise<PutApiReviewsByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/reviews/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiReviewsById(data: DeleteApiReviewsByIdData): CancelablePromise<DeleteApiReviewsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/reviews/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @returns ReviewDto OK
     * @throws ApiError
     */
    public static getApiReviews(): CancelablePromise<GetApiReviewsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/reviews'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns ReviewDto Created
     * @throws ApiError
     */
    public static postApiReviews(data: PostApiReviewsData): CancelablePromise<PostApiReviewsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/reviews',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

}

export class PromotionProductControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns PromotionProductDto OK
     * @throws ApiError
     */
    public static getApiPromotionProductsById(data: GetApiPromotionProductsByIdData): CancelablePromise<GetApiPromotionProductsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/promotion-products/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns PromotionProductDto OK
     * @throws ApiError
     */
    public static putApiPromotionProductsById(data: PutApiPromotionProductsByIdData): CancelablePromise<PutApiPromotionProductsByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/promotion-products/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiPromotionProductsById(data: DeleteApiPromotionProductsByIdData): CancelablePromise<DeleteApiPromotionProductsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/promotion-products/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @returns PromotionProductDto OK
     * @throws ApiError
     */
    public static getApiPromotionProducts(): CancelablePromise<GetApiPromotionProductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/promotion-products'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PromotionProductDto OK
     * @throws ApiError
     */
    public static postApiPromotionProducts(data: PostApiPromotionProductsData): CancelablePromise<PostApiPromotionProductsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/promotion-products',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns PromotionProductDto Created
     * @throws ApiError
     */
    public static postApiPromotionProductsBatch(data: PostApiPromotionProductsBatchData): CancelablePromise<PostApiPromotionProductsBatchResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/promotion-products/batch',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

}

export class ProductControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns ProductDto OK
     * @throws ApiError
     */
    public static getApiProductsById(data: GetApiProductsByIdData): CancelablePromise<GetApiProductsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/products/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns ProductDto OK
     * @throws ApiError
     */
    public static putApiProductsById(data: PutApiProductsByIdData): CancelablePromise<PutApiProductsByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/products/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiProductsById(data: DeleteApiProductsByIdData): CancelablePromise<DeleteApiProductsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/products/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @returns ProductDto OK
     * @throws ApiError
     */
    public static getApiProducts(): CancelablePromise<GetApiProductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/products'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.formData
     * @returns ProductDto Created
     * @throws ApiError
     */
    public static postApiProducts(data: PostApiProductsData = {}): CancelablePromise<PostApiProductsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/products',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }

}

export class ProductVariantControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns ProductVariantDto OK
     * @throws ApiError
     */
    public static getApiProductVariantsById(data: GetApiProductVariantsByIdData): CancelablePromise<GetApiProductVariantsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/product-variants/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns ProductVariantDto OK
     * @throws ApiError
     */
    public static putApiProductVariantsById(data: PutApiProductVariantsByIdData): CancelablePromise<PutApiProductVariantsByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/product-variants/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiProductVariantsById(data: DeleteApiProductVariantsByIdData): CancelablePromise<DeleteApiProductVariantsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/product-variants/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.productId
     * @returns ProductVariantDto OK
     * @throws ApiError
     */
    public static getApiProductVariants(data: GetApiProductVariantsData = {}): CancelablePromise<GetApiProductVariantsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/product-variants',
            query: {
                productId: data.productId
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.formData
     * @returns ProductVariantDto Created
     * @throws ApiError
     */
    public static postApiProductVariants(data: PostApiProductVariantsData = {}): CancelablePromise<PostApiProductVariantsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/product-variants',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.formData
     * @returns ProductVariantDto Created
     * @throws ApiError
     */
    public static postApiProductVariantsBulk(data: PostApiProductVariantsBulkData = {}): CancelablePromise<PostApiProductVariantsBulkResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/product-variants/bulk',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }

}

export class OrderControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns OrderDto OK
     * @throws ApiError
     */
    public static getApiOrdersById(data: GetApiOrdersByIdData): CancelablePromise<GetApiOrdersByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/orders/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns OrderDto OK
     * @throws ApiError
     */
    public static putApiOrdersById(data: PutApiOrdersByIdData): CancelablePromise<PutApiOrdersByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/orders/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiOrdersById(data: DeleteApiOrdersByIdData): CancelablePromise<DeleteApiOrdersByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/orders/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns PaymentResponseDto Accepted
     * @throws ApiError
     */
    public static putApiOrdersByIdConfirm(data: PutApiOrdersByIdConfirmData): CancelablePromise<PutApiOrdersByIdConfirmResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/orders/{id}/confirm',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @returns OrderDto OK
     * @throws ApiError
     */
    public static getApiOrders(): CancelablePromise<GetApiOrdersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/orders'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns OrderDto Created
     * @throws ApiError
     */
    public static postApiOrders(data: PostApiOrdersData): CancelablePromise<PostApiOrdersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/orders',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @returns OrderDto OK
     * @throws ApiError
     */
    public static getApiOrdersUserOrders(): CancelablePromise<GetApiOrdersUserOrdersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/orders/user/orders'
        });
    }

}

export class CategoryControllerService {
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns CategoryDto OK
     * @throws ApiError
     */
    public static getApiCategoriesById(data: GetApiCategoriesByIdData): CancelablePromise<GetApiCategoriesByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/categories/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.requestBody
     * @returns CategoryDto OK
     * @throws ApiError
     */
    public static putApiCategoriesById(data: PutApiCategoriesByIdData): CancelablePromise<PutApiCategoriesByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/categories/{id}',
            path: {
                id: data.id
            },
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiCategoriesById(data: DeleteApiCategoriesByIdData): CancelablePromise<DeleteApiCategoriesByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/categories/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @returns CategoryDto OK
     * @throws ApiError
     */
    public static getApiCategories(): CancelablePromise<GetApiCategoriesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/categories'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns CategoryDto Created
     * @throws ApiError
     */
    public static postApiCategories(data: PostApiCategoriesData): CancelablePromise<PostApiCategoriesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/categories',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

}

export class HeadingControllerService {
    /**
     * @returns HeadingDto OK
     * @throws ApiError
     */
    public static getApiHeadings(): CancelablePromise<GetApiHeadingsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/headings'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns HeadingDto Created
     * @throws ApiError
     */
    public static postApiHeadings(data: PostApiHeadingsData): CancelablePromise<PostApiHeadingsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/headings',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns HeadingDto OK
     * @throws ApiError
     */
    public static getApiHeadingsById(data: GetApiHeadingsByIdData): CancelablePromise<GetApiHeadingsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/headings/{id}',
            path: {
                id: data.id
            }
        });
    }

    /**
     * @param data The data for the request.
     * @param data.id
     * @returns void No Content
     * @throws ApiError
     */
    public static deleteApiHeadingsById(data: DeleteApiHeadingsByIdData): CancelablePromise<DeleteApiHeadingsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/headings/{id}',
            path: {
                id: data.id
            }
        });
    }

}