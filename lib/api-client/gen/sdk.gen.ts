// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { DeleteSizeData, DeleteSizeResponses, GetSizeByIdData, GetSizeByIdResponses, UpdateSizeData, UpdateSizeResponses, DeleteReviewData, DeleteReviewResponses, GetReviewByIdData, GetReviewByIdResponses, UpdateReviewData, UpdateReviewResponses, DeletePromotionProductData, DeletePromotionProductResponses, GetPromotionProductByIdData, GetPromotionProductByIdResponses, UpdatePromotionProductData, UpdatePromotionProductResponses, DeleteProductData, DeleteProductResponses, GetProductByIdData, GetProductByIdResponses, UpdateProductData, UpdateProductResponses, DeleteProductVariantData, DeleteProductVariantResponses, GetProductVariantData, GetProductVariantResponses, UpdateProductVariantData, UpdateProductVariantResponses, DeleteOrderData, DeleteOrderResponses, GetOrderByIdData, GetOrderByIdResponses, UpdateOrderData, UpdateOrderResponses, ConfirmOrderData, ConfirmOrderResponses, DeleteCategoryData, DeleteCategoryResponses, GetCategoryByIdData, GetCategoryByIdResponses, UpdateCategoryData, UpdateCategoryResponses, GetAllSizesData, GetAllSizesResponses, CreateSizeData, CreateSizeResponses, GetAllReviewsData, GetAllReviewsResponses, CreateReviewData, CreateReviewResponses, GetAllPromotionProductsData, GetAllPromotionProductsResponses, CreatePromotionProductData, CreatePromotionProductResponses, CreatePromotionProductsData, CreatePromotionProductsResponses, GetAllProductsData, GetAllProductsResponses, CreateProductData, CreateProductResponses, GetProductVariantsData, GetProductVariantsResponses, CreateProductVariantData, CreateProductVariantResponses, CreateProductVariantsData, CreateProductVariantsResponses, GetAllOrdersData, GetAllOrdersResponses, CreateOrderData, CreateOrderResponses, GetHeadingsData, GetHeadingsResponses, CreateHeadingData, CreateHeadingResponses, GetAllCategoriesData, GetAllCategoriesResponses, CreateCategoryData, CreateCategoryResponses, GetUserOrdersData, GetUserOrdersResponses, DeleteHeadingData, DeleteHeadingResponses, GetOrderById1Data, GetOrderById1Responses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteSize = <ThrowOnError extends boolean = false>(options: Options<DeleteSizeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSizeResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/sizes/{id}',
        ...options
    });
};

export const getSizeById = <ThrowOnError extends boolean = false>(options: Options<GetSizeByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSizeByIdResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/sizes/{id}',
        ...options
    });
};

export const updateSize = <ThrowOnError extends boolean = false>(options: Options<UpdateSizeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateSizeResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/sizes/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteReview = <ThrowOnError extends boolean = false>(options: Options<DeleteReviewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteReviewResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/reviews/{id}',
        ...options
    });
};

export const getReviewById = <ThrowOnError extends boolean = false>(options: Options<GetReviewByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetReviewByIdResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/reviews/{id}',
        ...options
    });
};

export const updateReview = <ThrowOnError extends boolean = false>(options: Options<UpdateReviewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateReviewResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/reviews/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deletePromotionProduct = <ThrowOnError extends boolean = false>(options: Options<DeletePromotionProductData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeletePromotionProductResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/promotion-products/{id}',
        ...options
    });
};

export const getPromotionProductById = <ThrowOnError extends boolean = false>(options: Options<GetPromotionProductByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPromotionProductByIdResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/promotion-products/{id}',
        ...options
    });
};

export const updatePromotionProduct = <ThrowOnError extends boolean = false>(options: Options<UpdatePromotionProductData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdatePromotionProductResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/promotion-products/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteProduct = <ThrowOnError extends boolean = false>(options: Options<DeleteProductData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteProductResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/products/{id}',
        ...options
    });
};

export const getProductById = <ThrowOnError extends boolean = false>(options: Options<GetProductByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetProductByIdResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/products/{id}',
        ...options
    });
};

export const updateProduct = <ThrowOnError extends boolean = false>(options: Options<UpdateProductData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateProductResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/products/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteProductVariant = <ThrowOnError extends boolean = false>(options: Options<DeleteProductVariantData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteProductVariantResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/product-variants/{id}',
        ...options
    });
};

export const getProductVariant = <ThrowOnError extends boolean = false>(options: Options<GetProductVariantData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetProductVariantResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/product-variants/{id}',
        ...options
    });
};

export const updateProductVariant = <ThrowOnError extends boolean = false>(options: Options<UpdateProductVariantData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateProductVariantResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/product-variants/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteOrder = <ThrowOnError extends boolean = false>(options: Options<DeleteOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrderResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders/{id}',
        ...options
    });
};

export const getOrderById = <ThrowOnError extends boolean = false>(options: Options<GetOrderByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrderByIdResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders/{id}',
        ...options
    });
};

export const updateOrder = <ThrowOnError extends boolean = false>(options: Options<UpdateOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateOrderResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const confirmOrder = <ThrowOnError extends boolean = false>(options: Options<ConfirmOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<ConfirmOrderResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders/{id}/confirm',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCategory = <ThrowOnError extends boolean = false>(options: Options<DeleteCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCategoryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/categories/{id}',
        ...options
    });
};

export const getCategoryById = <ThrowOnError extends boolean = false>(options: Options<GetCategoryByIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCategoryByIdResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/categories/{id}',
        ...options
    });
};

export const updateCategory = <ThrowOnError extends boolean = false>(options: Options<UpdateCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateCategoryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/categories/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAllSizes = <ThrowOnError extends boolean = false>(options?: Options<GetAllSizesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllSizesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/sizes',
        ...options
    });
};

export const createSize = <ThrowOnError extends boolean = false>(options: Options<CreateSizeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateSizeResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/sizes',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAllReviews = <ThrowOnError extends boolean = false>(options?: Options<GetAllReviewsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllReviewsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/reviews',
        ...options
    });
};

export const createReview = <ThrowOnError extends boolean = false>(options: Options<CreateReviewData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateReviewResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/reviews',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAllPromotionProducts = <ThrowOnError extends boolean = false>(options?: Options<GetAllPromotionProductsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllPromotionProductsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/promotion-products',
        ...options
    });
};

export const createPromotionProduct = <ThrowOnError extends boolean = false>(options: Options<CreatePromotionProductData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreatePromotionProductResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/promotion-products',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const createPromotionProducts = <ThrowOnError extends boolean = false>(options: Options<CreatePromotionProductsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreatePromotionProductsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/promotion-products/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAllProducts = <ThrowOnError extends boolean = false>(options?: Options<GetAllProductsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllProductsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/products',
        ...options
    });
};

export const createProduct = <ThrowOnError extends boolean = false>(options?: Options<CreateProductData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<CreateProductResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/products',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

export const getProductVariants = <ThrowOnError extends boolean = false>(options: Options<GetProductVariantsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetProductVariantsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/product-variants',
        ...options
    });
};

export const createProductVariant = <ThrowOnError extends boolean = false>(options?: Options<CreateProductVariantData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<CreateProductVariantResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/product-variants',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

export const createProductVariants = <ThrowOnError extends boolean = false>(options?: Options<CreateProductVariantsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<CreateProductVariantsResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/product-variants/bulk',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

export const getAllOrders = <ThrowOnError extends boolean = false>(options?: Options<GetAllOrdersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllOrdersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders',
        ...options
    });
};

export const createOrder = <ThrowOnError extends boolean = false>(options: Options<CreateOrderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateOrderResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getHeadings = <ThrowOnError extends boolean = false>(options?: Options<GetHeadingsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetHeadingsResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/headings',
        ...options
    });
};

export const createHeading = <ThrowOnError extends boolean = false>(options: Options<CreateHeadingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateHeadingResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/headings',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAllCategories = <ThrowOnError extends boolean = false>(options?: Options<GetAllCategoriesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAllCategoriesResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/categories',
        ...options
    });
};

export const createCategory = <ThrowOnError extends boolean = false>(options: Options<CreateCategoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateCategoryResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getUserOrders = <ThrowOnError extends boolean = false>(options?: Options<GetUserOrdersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserOrdersResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/orders/user/orders',
        ...options
    });
};

export const deleteHeading = <ThrowOnError extends boolean = false>(options: Options<DeleteHeadingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteHeadingResponses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/headings/{id}',
        ...options
    });
};

export const getOrderById1 = <ThrowOnError extends boolean = false>(options: Options<GetOrderById1Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrderById1Responses, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/headings/{id}',
        ...options
    });
};